@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}


/* === ① 自前のポータル（透過の受け皿） === */
:where(body) > :where(.app-overlay-root) {
  /* ← これが “抜けていた” ベース指定 */
  pointer-events: none !important;   /* 背景のクリックを奪わない */
  position: fixed;
  inset: 0;
  z-index: 70;                        /* 必要に応じて 72/80 などへ */
}
/* 子のうち、実際に操作させたい要素だけ有効化 */
:where(body) > :where(.app-overlay-root) > .overlay-interactive {
  pointer-events: auto !important;
}

/* === ② Clerk のポータル === */
:where(body) > :where(#clerk-components) {
  pointer-events: none !important;    /* 受け皿は透過 */
}
:where(#clerk-components) * {
  pointer-events: auto;               /* 中の本物は操作可 */
}

/* === ③ Next/Clerk のデバッグ巨大オーバーレイ対策（ある場合のみ） === */
:where(body) > div[style*="position: fixed"][style*="inset: 0"][style*="z-index: 2147483647"] {
  pointer-events: none !important;
}